<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--自动扫描  spring可以自动去扫描base-pack下面或者子包下面的java文件，
        如果扫描到有@Component @Controller@Service等这些注解的类，
        则把这些类注册为bean-->
    <context:component-scan base-package="com.kaishengit">
        <!--排除controller和ControllerAdvice注解的类-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--读取properties配置文件-->
    <context:property-placeholder location="classpath:config.properties"/>

    <!--数据库连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--创建jdbc的事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--开启基于注解的事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--创建mybatis sqlsessionfactoryBean-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置别名所在的包，别名默认为类名-->
        <property name="typeAliasesPackage" value="com.kaishengit.entity"/>
        <!--配置mapper xml所在的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>

        <!--mybatis的其它配置-->
        <property name="configuration">
            <!--解决数据库下划线和java中的驼峰命名法-->
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
    </bean>

    <!--mybatis mapper接口自动扫描-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置mapper接口所在的包-->
        <property name="basePackage" value="com.kaishengit.mapper"/>
    </bean>

</beans>