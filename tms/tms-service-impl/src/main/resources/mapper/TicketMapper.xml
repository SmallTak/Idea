<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.tms.mapper.TicketMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.tms.entity.Ticket">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ticket_num" jdbcType="INTEGER" property="ticketNum" />
    <result column="ticket_in_time" jdbcType="TIMESTAMP" property="ticketInTime" />
    <result column="ticket_state" jdbcType="VARCHAR" property="ticketState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="ticket_out_time" jdbcType="VARCHAR" property="ticketOutTime" />
    <result column="stroe_account_id" jdbcType="INTEGER" property="stroeAccountId" />
    <result column="ticket_validity_Start" jdbcType="VARCHAR" property="ticketValidityStart" />
    <result column="ticket_validity_end" jdbcType="VARCHAR" property="ticketValidityEnd" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ticket_num, ticket_in_time, ticket_state, create_time, update_time, ticket_out_time, 
    stroe_account_id, ticket_validity_Start, ticket_validity_end, customer_id
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.tms.entity.TicketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ticket
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.tms.entity.TicketExample">
    delete from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.tms.entity.Ticket">
    insert into ticket (id, ticket_num, ticket_in_time, 
      ticket_state, create_time, update_time, 
      ticket_out_time, stroe_account_id, ticket_validity_Start, 
      ticket_validity_end, customer_id)
    values (#{id,jdbcType=INTEGER}, #{ticketNum,jdbcType=INTEGER}, #{ticketInTime,jdbcType=TIMESTAMP}, 
      #{ticketState,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{ticketOutTime,jdbcType=VARCHAR}, #{stroeAccountId,jdbcType=INTEGER}, #{ticketValidityStart,jdbcType=VARCHAR}, 
      #{ticketValidityEnd,jdbcType=VARCHAR}, #{customerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.tms.entity.Ticket">
    insert into ticket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ticketNum != null">
        ticket_num,
      </if>
      <if test="ticketInTime != null">
        ticket_in_time,
      </if>
      <if test="ticketState != null">
        ticket_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="ticketOutTime != null">
        ticket_out_time,
      </if>
      <if test="stroeAccountId != null">
        stroe_account_id,
      </if>
      <if test="ticketValidityStart != null">
        ticket_validity_Start,
      </if>
      <if test="ticketValidityEnd != null">
        ticket_validity_end,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ticketNum != null">
        #{ticketNum,jdbcType=INTEGER},
      </if>
      <if test="ticketInTime != null">
        #{ticketInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketState != null">
        #{ticketState,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketOutTime != null">
        #{ticketOutTime,jdbcType=VARCHAR},
      </if>
      <if test="stroeAccountId != null">
        #{stroeAccountId,jdbcType=INTEGER},
      </if>
      <if test="ticketValidityStart != null">
        #{ticketValidityStart,jdbcType=VARCHAR},
      </if>
      <if test="ticketValidityEnd != null">
        #{ticketValidityEnd,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <insert id="batchInsert" parameterType="com.kaishengit.tms.entity.Ticket">
    insert into ticket (ticket_num, ticket_in_time,
    ticket_state, create_time) VALUES
    <foreach collection="tickets" item="ticket" separator=",">
      (#{ticket.ticketNum},#{ticket.ticketInTime},#{ticket.ticketState},#{ticket.createTime})
    </foreach>

  </insert>

  <select id="countByExample" parameterType="com.kaishengit.tms.entity.TicketExample" resultType="java.lang.Long">
    select count(*) from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="findByBeginNumAndEndNum" resultType="com.kaishengit.tms.entity.Ticket">

      SELECT
        *
      FROM
        ticket
      WHERE
        ticket_num >= CONVERT (#{beginNum}, UNSIGNED INT)
      AND ticket_num &lt;= CONVERT (#{endNum}, UNSIGNED INT);

    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update ticket
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ticketNum != null">
        ticket_num = #{record.ticketNum,jdbcType=INTEGER},
      </if>
      <if test="record.ticketInTime != null">
        ticket_in_time = #{record.ticketInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ticketState != null">
        ticket_state = #{record.ticketState,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ticketOutTime != null">
        ticket_out_time = #{record.ticketOutTime,jdbcType=VARCHAR},
      </if>
      <if test="record.stroeAccountId != null">
        stroe_account_id = #{record.stroeAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.ticketValidityStart != null">
        ticket_validity_Start = #{record.ticketValidityStart,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketValidityEnd != null">
        ticket_validity_end = #{record.ticketValidityEnd,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticket
    set id = #{record.id,jdbcType=INTEGER},
      ticket_num = #{record.ticketNum,jdbcType=INTEGER},
      ticket_in_time = #{record.ticketInTime,jdbcType=TIMESTAMP},
      ticket_state = #{record.ticketState,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      ticket_out_time = #{record.ticketOutTime,jdbcType=VARCHAR},
      stroe_account_id = #{record.stroeAccountId,jdbcType=INTEGER},
      ticket_validity_Start = #{record.ticketValidityStart,jdbcType=VARCHAR},
      ticket_validity_end = #{record.ticketValidityEnd,jdbcType=VARCHAR},
      customer_id = #{record.customerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.tms.entity.Ticket">
    update ticket
    <set>
      <if test="ticketNum != null">
        ticket_num = #{ticketNum,jdbcType=INTEGER},
      </if>
      <if test="ticketInTime != null">
        ticket_in_time = #{ticketInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketState != null">
        ticket_state = #{ticketState,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketOutTime != null">
        ticket_out_time = #{ticketOutTime,jdbcType=VARCHAR},
      </if>
      <if test="stroeAccountId != null">
        stroe_account_id = #{stroeAccountId,jdbcType=INTEGER},
      </if>
      <if test="ticketValidityStart != null">
        ticket_validity_Start = #{ticketValidityStart,jdbcType=VARCHAR},
      </if>
      <if test="ticketValidityEnd != null">
        ticket_validity_end = #{ticketValidityEnd,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.tms.entity.Ticket">
    update ticket
    set ticket_num = #{ticketNum,jdbcType=INTEGER},
      ticket_in_time = #{ticketInTime,jdbcType=TIMESTAMP},
      ticket_state = #{ticketState,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      ticket_out_time = #{ticketOutTime,jdbcType=VARCHAR},
      stroe_account_id = #{stroeAccountId,jdbcType=INTEGER},
      ticket_validity_Start = #{ticketValidityStart,jdbcType=VARCHAR},
      ticket_validity_end = #{ticketValidityEnd,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="batchUpdate" parameterType="com.kaishengit.tms.entity.Ticket">

    update ticket SET
    <foreach collection="ticketList" item="ticket" separator=",">
      (ticket_num, update_time) values (#{ticket.ticketNum},#{ticket.updateTime})
    </foreach>
  </update>

</mapper>